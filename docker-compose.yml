version: '3.8'

networks:
  t_work:
    driver: bridge

services:
  nginx:
    image: nginx:stable-alpine
    container_name: t_work-nginx
    ports:
      - "6010:6010"
    depends_on:
      - php
    networks:
      - t_work
    volumes:
      - ./:/app
      - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/logs:/var/log/nginx

  postgres:
    image: postgres:14-alpine3.15
    container_name: t_work-postgres
    hostname: t_work-postgres
    ports:
      - "5439:5432"
    restart: unless-stopped
    tty: true
    env_file:
      - ./.env
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: ${DB_USERNAME:-pgsql}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
      POSTGRES_DB: ${DB_DATABASE:-t_work_db}
      DB_DATABASE_TESTING: ${DB_DATABASE_TESTING:-t_work_db_test}
    volumes:
      - ./docker/postgres/pg-data:/var/lib/postgresql/data
      - ./docker/postgres/dumps:/var/www/db-dumps
      - ./docker/postgres:/docker-entrypoint-initdb.d
    networks:
      - t_work

  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: t_work-php
    ports:
      - "5174:5174"
    env_file:
      - ./.env
    environment:
      DATABASE_URL: ${DB_CONNECTION}://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_DATABASE}
    volumes:
      - ./docker/config/php.conf.ini:/usr/local/etc/php/conf.d/php.ini
      - ./:/app
    networks:
      - t_work

  nodejs:
    image: node:16.15-alpine
    container_name: t_work-nodejs
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ./:/app
    networks:
      - t_work
    command: >
      sh -c "npm install && npm run build"

  swagger-editor:
    image: swaggerapi/swagger-editor
    container_name: "swagger-editor-container"
    platform: linux/amd64
    ports:
      - "6001:8080"
    networks:
      - t_work

  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: "swagger-ui-container"
    ports:
      - "6002:8080"
    volumes:
      - ./docker/swagger/swagger.yml:/swagger.yml
    environment:
      SWAGGER_JSON: /swagger.yml
    networks:
      - t_work

volumes:
  pg-data:
    driver: local

